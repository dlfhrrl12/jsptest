package controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.MemberVO;
import service.MemberService;
import service.MemberServiceImpl;


@WebServlet("/memb/*")
public class MemberController extends HttpServlet {
	private static final long serialVersionUID = 1L;
    //로그 객체
	private static final Logger log = LoggerFactory.getLogger(MemberController.class);
	
	//rdp 객체 requestDispatcher : 요청결과에 대한 응답 데이터를 jsp로 전송하는 역할
	private RequestDispatcher rdp;
	
	//목적지 주소
	private String destPage;
	
	//isOk : DB 저장 변수
	private int isOk;
	
	private MemberService msv; //(memberService)interface
	
    public MemberController() {
        // 생성자
    	msv = new MemberServiceImpl(); //service implement
    }


	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		
		response.setContentType("text/html; charset=UTF-8");
		
		String uri = request.getRequestURI();
		log.info(uri);
		
		String path = uri.substring(uri.lastIndexOf("/")+1);
		log.info(path);
		
		switch(path) {
		case "join":
			
			destPage = "/member/join.jsp";
			break;
			
		case "register":
			try {
				
				String id = request.getParameter("id");
				String pwd = request.getParameter("pwd");
				String email = request.getParameter("email");
				int age = Integer.parseInt(request.getParameter("age"));
				String phone = request.getParameter("phone");
				
				MemberVO mvo = new MemberVO(id, pwd, email, age, phone);
				
				log.info("join mvo >> {}", mvo);
				
				isOk = mvo.register(mvo);
				log.info("join >> {}", (isOk > 0)?"OK":"Fail");
				destPage="/index.jsp";
				
			} catch (Exception e) {
				e.printStackTrace();
			}
			
			break;
		
		}
		
		rdp = request.getRequestDispatcher(destPage);
		
		rdp.forward(request, response);
		
	}

	
	
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}
